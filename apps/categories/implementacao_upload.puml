@startuml implementacao_upload



class Postgres {
    dsn string
    open()
    close()
}



class BucketFactory {
    create()
}

class ProviderGenerico {
    handler
    upload()
}



class MediaDB {
    adapter *Postgres
    Create(media *entity.MediaEntity) (*entity.MediaEntity, error)
    FindAll(page, limit int, sort string) ([]entity.MediaEntity, error)
    FindByID(id string) (*entity.MediaEntity, error)
    Delete(id string) error
}




class MediaEntity {
    Id UIID
    Name string
    ContentType string
    Link string
    Provider string
    Bucket string
    Directory string
    Size int64
    Title string
    Description string
    Alt string

    GetId()
    GetName()
    GetBucket()
}



class UploadService {
    bucket *Bucket
    repository *MediaDB
    Upload(ctx context.Context, input_params MediaInput)
    Save(ctx context.Context, media *entity.MediaEntity)
}



class UploadFilesUseCase {
    service UploadService
    Execute(ctx context.Context, input_params MediaInput)
}


UploadFilesUseCase --> UploadService: executa servicos
UploadFilesUseCase --> MediaEntity : cria uma entidade para ser salva
UploadService <-- MediaDB: possui
MediaDB -- Postgres: < pertence
MediaDB --> MediaEntity : trafega parametros
UploadService <-- BucketFactory : retorna um provedor
BucketFactory --> ProviderGenerico:  cria um provedor

@enduml
