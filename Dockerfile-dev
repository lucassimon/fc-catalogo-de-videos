FROM python:3.10.4-slim

ARG PYTHON_VERSION=3.10.4
ARG POETRY_VERSION=1.1.13

RUN apt update && \
    apt install -y --no-install-recommends \
    build-essential \
    python3-dev \
    libffi-dev  \
    libssl-dev \
    libpcre3-dev \
    zlib1g-dev \
    libtiff5-dev \
    libbz2-dev \
    apt-utils \
    vim \
    default-jre \
    git \
    zsh \
    curl \
    wget \
    less \
    fonts-powerline \
    libpq-dev \
    postgresql-client


RUN useradd -ms /bin/zsh api
USER api:api
WORKDIR /home/api/app

## virtualenv
ENV HOME=/home/api \
    PATH=$PATH:/home/api/.local/bin \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    POETRY_HOME="/home/api/poetry" \
    POETRY_VIRTUALENVS_IN_PROJECT=true \
    POETRY_NO_INTERACTION=1 \
    LIBRARY_PATH=/lib:/usr/lib \
    JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64


RUN curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python && \
    sh -c "$(wget -O- https://github.com/deluan/zsh-in-docker/releases/download/v1.1.2/zsh-in-docker.sh)" -- \
    -t "ys" \
    -p git \
    -p git-flow \
    -p https://github.com/zsh-users/zsh-completions \
    -p https://github.com/zsh-users/zsh-autosuggestions \
    -a "export TERM=xterm-256color" && \
    echo '[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh' >> ~/.zshrc

ENV PATH="$POETRY_HOME/bin:$PATH"

COPY ./poetry.lock ./pyproject.toml /home/api/
RUN poetry install


COPY --chown=api:api ./.devcontainer/start-celery.sh $HOME/start-celery.sh
COPY --chown=api:api ./.devcontainer/entrypoint.sh $HOME/entrypoint.sh
COPY --chown=api:api ./.devcontainer/start.sh $HOME/start.sh
COPY --chown=api:api ./.devcontainer/gitconfig $HOME/.gitconfig

ENV PATH="$HOME/.venv/bin:$PATH"

EXPOSE 5000
ENTRYPOINT [ "/home/api/entrypoint.sh" ]
